# Ninja file generated by bang (https://cdelord.fr/bang)
# bang build.lua -o build.ninja

# Distribution of lz4 binaries for Linux, MacOS and Windows.
#
# This Ninja build file will compile and install lz4 $lz4_version.
#
# Targets:
#   help      show this help message
#   compile   Build Lz4 binaries for the host only
#   all       Build Lz4 archives for Linux, MacOS and Windows
#   install   install lz4-builder in PREFIX or ~/.local
#   clean     clean generated files

# Files installed in bin
#   .build/lz4

ninja_required_version = 1.11.1

release = lz4-build-r1
lz4_version = 1.10.0
builddir = .build

rule extract
  description = extract $url
  command = curl -fsSL $url | PATH=$builddir:$$PATH tar x --$fmt

cflags = -O3 -s -Ilz4-$lz4_version/lib

rule cpp
  description = c++ $out
  command = $compiler $cflags -DPROGVERSION="\"$progversion\"" $in -o $out

######################################################################
# lz4
######################################################################

lz4_url = https://github.com/lz4/lz4/archive/refs/tags/v1.10.0.tar.gz
build lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c: extract
  fmt = gzip
  url = $lz4_url
build $builddir/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = cc
  progversion = $lz4_version
build $builddir/linux-x86_64/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target x86_64-linux-gnu
  progversion = $lz4_version
build $builddir/linux-x86_64-musl/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target x86_64-linux-musl
  progversion = $lz4_version
build $builddir/linux-aarch64/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target aarch64-linux-gnu
  progversion = $lz4_version
build $builddir/linux-aarch64-musl/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target aarch64-linux-musl
  progversion = $lz4_version
build $builddir/macos-x86_64/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target x86_64-macos-none
  progversion = $lz4_version
build $builddir/macos-aarch64/lz4: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target aarch64-macos-none
  progversion = $lz4_version
build $builddir/windows-x86_64/lz4.exe: cpp lz4-$lz4_version/programs/bench.c lz4-$lz4_version/programs/lorem.c lz4-$lz4_version/programs/lz4cli.c lz4-$lz4_version/programs/lz4io.c lz4-$lz4_version/programs/threadpool.c lz4-$lz4_version/programs/timefn.c lz4-$lz4_version/programs/util.c lz4-$lz4_version/lib/lz4.c lz4-$lz4_version/lib/lz4file.c lz4-$lz4_version/lib/lz4frame.c lz4-$lz4_version/lib/lz4hc.c lz4-$lz4_version/lib/xxhash.c
  compiler = zig cc -target x86_64-windows-gnu
  progversion = $lz4_version

######################################################################
# Host binaries
######################################################################

build compile: phony $builddir/lz4

default compile

######################################################################
# Archives
######################################################################

rule tar
  description = tar $out
  command = tar -caf $out $in --transform='s,$prefix/,,'

build $builddir/${release}-linux-x86_64.tar.gz: tar $builddir/linux-x86_64/lz4
  prefix = $builddir/linux-x86_64
build $builddir/${release}-linux-x86_64-musl.tar.gz: tar $builddir/linux-x86_64-musl/lz4
  prefix = $builddir/linux-x86_64-musl
build $builddir/${release}-linux-aarch64.tar.gz: tar $builddir/linux-aarch64/lz4
  prefix = $builddir/linux-aarch64
build $builddir/${release}-linux-aarch64-musl.tar.gz: tar $builddir/linux-aarch64-musl/lz4
  prefix = $builddir/linux-aarch64-musl
build $builddir/${release}-macos-x86_64.tar.gz: tar $builddir/macos-x86_64/lz4
  prefix = $builddir/macos-x86_64
build $builddir/${release}-macos-aarch64.tar.gz: tar $builddir/macos-aarch64/lz4
  prefix = $builddir/macos-aarch64
build $builddir/${release}-windows-x86_64.tar.gz: tar $builddir/windows-x86_64/lz4.exe
  prefix = $builddir/windows-x86_64
build all: phony $builddir/${release}-linux-x86_64.tar.gz $builddir/${release}-linux-x86_64-musl.tar.gz $builddir/${release}-linux-aarch64.tar.gz $builddir/${release}-linux-aarch64-musl.tar.gz $builddir/${release}-macos-x86_64.tar.gz $builddir/${release}-macos-aarch64.tar.gz $builddir/${release}-windows-x86_64.tar.gz

######################################################################
# Installation
######################################################################

prefix = ~/.local

rule install-bin
  description = INSTALL $in to bin
  command = install -v -D -t $${PREFIX:-$prefix}/bin $in

build install-bin: install-bin $builddir/lz4
build install: phony install-bin

######################################################################
# Clean
######################################################################

rule clean-_builddir
  description = CLEAN $builddir
  command = rm -rf $builddir/*

build clean-_builddir: clean-_builddir
build clean: phony clean-_builddir

######################################################################
# Help
######################################################################

rule help
  description = help
  command = echo "Distribution of lz4 binaries for Linux, MacOS and Windows."; $
            echo ""; $
            echo "This Ninja build file will compile and install lz4 $lz4_version."; $
            echo ""; $
            echo "Targets:"; $
            echo "  help      show this help message"; $
            echo "  compile   Build Lz4 binaries for the host only"; $
            echo "  all       Build Lz4 archives for Linux, MacOS and Windows"; $
            echo "  install   install lz4-builder in PREFIX or ~/.local"; $
            echo "  clean     clean generated files"

build help: help

######################################################################
# Regenerate build.ninja when build.lua changes
######################################################################

rule bang
  command = bang $in -o $out
  generator = true

build build.ninja: bang build.lua
